name: Linux GCC

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  linux-gcc:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-22.04
    
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "GCC 9 Release",
              cc: "gcc-9",
              cxx: "g++-9",
              build_type: "Release"
            }
          - {
              name: "GCC 9 Debug",
              cc: "gcc-9",
              cxx: "g++-9",
              build_type: "Debug"
            }
          - {
              name: "GCC 11 Release",
              cc: "gcc-11",
              cxx: "g++-11",
              build_type: "Release"
            }
          - {
              name: "GCC 11 Debug",
              cc: "gcc-11", 
              cxx: "g++-11",
              build_type: "Debug"
            }
          - {
              name: "GCC 12 Release",
              cc: "gcc-12",
              cxx: "g++-12",
              build_type: "Release"
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build ${{ matrix.config.cc }} ${{ matrix.config.cxx }}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.25'

      - name: Set Environment Variables
        run: |
          echo "CC=${{ matrix.config.cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.config.cxx }}" >> $GITHUB_ENV

      - name: Configure CMake
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G Ninja

      - name: Build
        run: cmake --build build --config ${{ matrix.config.build_type }} --parallel

      - name: Test
        working-directory: build
        run: ctest --output-on-failure --parallel -C ${{ matrix.config.build_type }}

      - name: Run Tests Directly
        working-directory: build
        run: ./circular_buffer_tests --gtest_output=xml:test_results.xml

      - name: Run Performance Tests
        working-directory: build
        run: ./performance_test > performance_results.txt

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.config.name }}
          path: build/test_results.xml

      - name: Upload Performance Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results-${{ matrix.config.name }}
          path: build/performance_results.txt 